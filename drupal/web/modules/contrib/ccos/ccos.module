<?php

/**
 * @file
 * Contains ccos.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\Core\Cache\RefinableCacheableDependencyInterface;

/**
 * Implements hook_help().
 */
function ccos_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ccos module.
    case 'help.page.ccos':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module will help you to clear cache of any sole/specific entity type (i.e block, node, views block, view page etc.) from contextual links, local task menu and operations drop-button.') . '</p>';
      $output .= '<i>' . t('Drush commands is available. Please check README.txt file or visit <a href=":module_link" target="_blank">module description page</a>.', [':module_link' => 'https://www.drupal.org/project/ccos']) . '</i>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_operation().
 */
function ccos_entity_operation(EntityInterface $entity) {
  if (!empty($entity->getEntityTypeId()) && !empty($entity->id())) {
    $operations = [];
    $operations['ccos_single'] = [
      'title' => t('Clear cache'),
      'url' => \Drupal::service('ccos.clear_cache')->createUrl($entity->getEntityTypeId(), $entity->id()),
      'weight' => 100,
    ];
    return $operations;
  }
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function ccos_contextual_links_view_alter(&$element, $items) {
  $ccos = \Drupal::service('ccos.clear_cache');

  if (isset($element['#contextual_links']['block'])) {
    $id = $element['#contextual_links']['block']['route_parameters']['block'];
    if (!empty($id)) {
      $processedLink = [
        'title' => t('Clear cache'),
        'url' => $ccos->createUrl('block', $id),
      ];
      $element['#links']['ccos'] = $processedLink;
    }
  }
  elseif (isset($element['#contextual_links']['entity.view.edit_form'])) {
    $id = $element['#contextual_links']['entity.view.edit_form']['route_parameters']['view'];
    if (!empty($id)) {
      $processedLink = [
        'title' => t('Clear cache'),
        'url' => $ccos->createUrl('view', $id),
      ];
      $element['#links']['ccos'] = $processedLink;
    }
  }
  elseif (isset($element['#contextual_links']['taxonomy_term'])) {
    $id = $element['#contextual_links']['taxonomy_term']['route_parameters']['taxonomy_term'];
    if (!empty($id)) {
      $processedLink = [
        'title' => t('Clear cache'),
        'url' => $ccos->createUrl('taxonomy_term', $id),
      ];
      $element['#links']['ccos'] = $processedLink;
    }
  }
  elseif (isset($element['#contextual_links']['node'])) {
    $id = $element['#contextual_links']['node']['route_parameters']['node'];
    if (!empty($id)) {
      $processedLink = [
        'title' => t('Clear cache'),
        'url' => $ccos->createUrl('node', $id),
      ];
      $element['#links']['ccos'] = $processedLink;
    }
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function ccos_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface &$cacheability) {
  $current_path = \Drupal::service('path.current')->getPath();
  $params = Url::fromUserInput($current_path)->getRouteParameters();
  $ccos = \Drupal::service('ccos.clear_cache');

  if (!empty($params)) {
    $find = array_keys($params)[0];
    $lists = $ccos->getEntityTypeLists();
    if (array_key_exists($find, $lists)) {
      // Add a tab linking to clear cache to all pages.
      $data['tabs'][0]['ccos.single'] = [
        '#theme' => 'menu_local_task',
        '#link' => [
          'title' => t('Clear cache'),
          'url' => $ccos->createUrl($find, $params[$find]),
          'localized_options' => [],
        ],
        '#weight' => 100,
      ];
    }
  }
}
